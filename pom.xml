<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>SpringMaster</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SpringMaster</name>
	<description>Spring Boot Master Class Tutorial</description>
	<properties>
		<java.version>11</java.version>
		<!-- Image Details		-->
		<app.image.name>springmaster</app.image.name>
		<app.image.tag/>
		<spring.cloud-version>2020.0.0</spring.cloud-version>
	</properties>

	<!-- SpringCloud 	-->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!--	SpringBoot Starter WEB - RESTful API Builder	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- Exclusion for Tomcat Web Server		-->
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>org.springframework.boot</groupId>-->
<!--					<artifactId>spring-boot-starter-tomcat</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
		</dependency>
		<!-- After Exclude, using jetty Web Server		-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-jetty</artifactId>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- H2 Database		-->
<!--		<dependency>-->
<!--			<groupId>com.h2database</groupId>-->
<!--			<artifactId>h2</artifactId>-->
<!--			<scope>runtime</scope>-->
<!--		</dependency>-->

		<!-- Postgresql Database		-->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- SpringData JPA		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	<!-- OpenFeign		-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- Spring Actuator		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Micrometer - Prometheus	-->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- Configuration Processor		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Lombok		-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--	jib Plugin				-->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<!--		Base image we are basing from				-->
					<from>
						<image>openjdk:11</image>
					</from>
					<!--		Container properties				-->
					<container>
						<ports>
							<port>8080</port>
						</ports>
						<!--		Open Container Initiative				-->
						<format>OCI</format>
					</container>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<!-- Profile to push to DockerHub	-->
		<profile>
			<id>jib-push-to-dockerhub</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!--	jib Plugin				-->
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>2.5.2</version>
						<configuration>
							<!--		Base image we are basing from				-->
							<from>
								<image>openjdk:11</image>
							</from>
							<!--		Container properties				-->
							<container>
								<ports>
									<port>8080</port>
								</ports>
								<!--		Open Container Initiative				-->
								<format>OCI</format>
							</container>
						</configuration>
						<executions>
							<execution>
								<id>push-custom-tag</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>docker.io/romequ/${app.image.name}:${app.image.tag}</image>
									</to>
								</configuration>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-latest-tag</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>docker.io/romequ/${app.image.name}:latest</image>
									</to>
								</configuration>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile to push to local Docker	-->
		<profile>
			<id>jib-push-to-docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!--	jib Plugin				-->
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>2.5.2</version>
						<configuration>
							<!--		Base image we are basing from				-->
							<from>
								<image>openjdk:11</image>
							</from>
							<!--		Container properties				-->
							<container>
								<ports>
									<port>8080</port>
								</ports>
								<!--		Open Container Initiative				-->
								<format>OCI</format>
							</container>
						</configuration>
						<executions>
							<execution>
								<id>push-custom-tag</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>romequ/${app.image.name}:${app.image.tag}</image>
									</to>
								</configuration>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
							</execution>
							<execution>
								<id>push-latest-tag</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>romequ/${app.image.name}:latest</image>
									</to>
								</configuration>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile for FE to be included in build	-->
		<profile>
			<id>build-frontend</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<!-- Use the latest released version:
                                  https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
						<version>1.11.2</version>
						<configuration>
							<nodeVersion>v4.6.0</nodeVersion>
							<!--		References the FE folder					-->
							<workingDirectory>src/frontend</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<!--		Installing Node and npm					-->
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v15.4.0</nodeVersion>
									<npmVersion>7.3.0</npmVersion>
								</configuration>
							</execution>
							<execution>
								<!--		Installing Packages					-->
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm run build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--	Plugin for FE Build to be included in Target Build				-->
					<plugin>
						<!--	groupID already specified in parent pom				-->
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-build-folder</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<!-- directs to frontend/build folder			-->
											<directory>src/frontend/build</directory>
										</resource>
									</resources>
									<!-- output destination			-->
									<outputDirectory>
										${basedir}/target/classes/static
									</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>